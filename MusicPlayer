<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spotify-Inspired Music Player</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        :root {
            --spotify-green: #1DB954;
            --spotify-dark: #121212;
            --spotify-light: #282828;
            --spotify-text: #FFFFFF;
            --spotify-text-secondary: #B3B3B3;
            --spotify-card: #181818;
            --spotify-hover: #2A2A2A;
        }

        body {
            background: linear-gradient(135deg, #121212, #000000);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            color: var(--spotify-text);
        }

        .container {
            width: 100%;
            max-width: 1200px;
            height: 90vh;
            background: var(--spotify-dark);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
            overflow: hidden;
            display: grid;
            grid-template-columns: 250px 1fr;
            grid-template-rows: 80px 1fr 100px;
            grid-template-areas:
                "sidebar header"
                "sidebar main"
                "player player";
        }

        /* Header Styles */
        .header {
            grid-area: header;
            background: rgba(18, 18, 18, 0.8);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            padding: 0 30px;
            border-bottom: 1px solid rgba(40, 40, 40, 0.5);
            z-index: 10;
        }

        .search-container {
            display: flex;
            align-items: center;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 8px 15px;
            width: 300px;
            transition: all 0.3s ease;
        }

        .search-container:hover {
            background: rgba(255, 255, 255, 0.15);
        }

        .search-container input {
            background: transparent;
            border: none;
            color: var(--spotify-text);
            padding: 5px 10px;
            width: 100%;
            outline: none;
            font-size: 14px;
        }

        .user-actions {
            margin-left: auto;
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
            background: rgba(0, 0, 0, 0.3);
            padding: 5px 15px 5px 5px;
            border-radius: 30px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .user-profile:hover {
            background: rgba(0, 0, 0, 0.5);
        }

        .user-avatar {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background: linear-gradient(135deg, #1DB954, #191414);
        }

        /* Sidebar Styles */
        .sidebar {
            grid-area: sidebar;
            background: rgba(0, 0, 0, 0.5);
            padding: 20px 0;
            border-right: 1px solid rgba(40, 40, 40, 0.5);
            overflow-y: auto;
        }

        .logo {
            padding: 0 20px 20px;
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 24px;
            font-weight: 700;
        }

        .logo i {
            color: var(--spotify-green);
        }

        .nav-links {
            list-style: none;
            padding: 10px 0;
        }

        .nav-links li {
            padding: 10px 20px;
            margin: 5px 0;
            border-radius: 5px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 15px;
            transition: all 0.3s ease;
        }

        .nav-links li:hover, .nav-links li.active {
            background: var(--spotify-light);
        }

        .nav-links li i {
            width: 24px;
            text-align: center;
        }

        .playlists {
            padding: 20px 0;
            border-top: 1px solid rgba(40, 40, 40, 0.5);
            margin-top: 20px;
        }

        .playlists h3 {
            padding: 0 20px 15px;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 1px;
            color: var(--spotify-text-secondary);
        }

        .playlist-links {
            list-style: none;
        }

        .playlist-links li {
            padding: 8px 20px;
            color: var(--spotify-text-secondary);
            cursor: pointer;
            transition: all 0.3s ease;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .playlist-links li:hover {
            color: var(--spotify-text);
        }

        /* Main Content Styles */
        .main-content {
            grid-area: main;
            padding: 30px;
            overflow-y: auto;
        }

        .content-header {
            margin-bottom: 30px;
        }

        .content-header h1 {
            font-size: 28px;
            margin-bottom: 15px;
        }

        .playlist-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 20px;
        }

        .playlist-card {
            background: var(--spotify-card);
            border-radius: 8px;
            padding: 15px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .playlist-card:hover {
            background: var(--spotify-hover);
            transform: translateY(-5px);
        }

        .album-art {
            width: 100%;
            aspect-ratio: 1/1;
            border-radius: 5px;
            overflow: hidden;
            margin-bottom: 15px;
            position: relative;
        }

        .album-art img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .play-button {
            position: absolute;
            bottom: 10px;
            right: 10px;
            width: 40px;
            height: 40px;
            background: var(--spotify-green);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .playlist-card:hover .play-button {
            opacity: 1;
            transform: translateY(0);
        }

        .playlist-info h3 {
            font-size: 16px;
            margin-bottom: 5px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .playlist-info p {
            font-size: 14px;
            color: var(--spotify-text-secondary);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        /* Player Styles */
        .player {
            grid-area: player;
            background: var(--spotify-light);
            border-top: 1px solid rgba(40, 40, 40, 0.5);
            display: flex;
            align-items: center;
            padding: 0 20px;
            z-index: 10;
        }

        .now-playing {
            display: flex;
            align-items: center;
            gap: 15px;
            width: 30%;
        }

        .now-playing img {
            width: 60px;
            height: 60px;
            border-radius: 5px;
            object-fit: cover;
        }

        .track-info h4 {
            font-size: 14px;
            margin-bottom: 5px;
        }

        .track-info p {
            font-size: 12px;
            color: var(--spotify-text-secondary);
        }

        .like-btn {
            margin-left: 15px;
            color: var(--spotify-text-secondary);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .like-btn:hover {
            color: var(--spotify-green);
        }

        .player-controls {
            width: 40%;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .control-buttons {
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 10px;
        }

        .control-btn {
            background: transparent;
            border: none;
            color: var(--spotify-text-secondary);
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 32px;
            height: 32px;
        }

        .control-btn:hover {
            color: var(--spotify-text);
        }

        .control-btn.play-pause {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--spotify-text);
            color: var(--spotify-dark);
        }

        .control-btn.play-pause:hover {
            transform: scale(1.05);
            background: white;
        }

        .progress-container {
            width: 100%;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .progress-time {
            font-size: 12px;
            color: var(--spotify-text-secondary);
            width: 40px;
        }

        .progress-bar {
            flex: 1;
            height: 4px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 2px;
            overflow: hidden;
            cursor: pointer;
        }

        .progress {
            height: 100%;
            background: var(--spotify-text);
            width: 30%;
            border-radius: 2px;
            position: relative;
        }

        .progress::after {
            content: '';
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 12px;
            height: 12px;
            background: var(--spotify-text);
            border-radius: 50%;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .progress-bar:hover .progress::after {
            opacity: 1;
        }

        .extra-controls {
            width: 30%;
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: 15px;
        }

        .volume-container {
            display: flex;
            align-items: center;
            gap: 10px;
            width: 120px;
        }

        .volume-bar {
            flex: 1;
            height: 4px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 2px;
            overflow: hidden;
            cursor: pointer;
        }

        .volume-level {
            height: 100%;
            background: var(--spotify-text);
            width: 70%;
            border-radius: 2px;
        }

        /* Responsive Design */
        @media (max-width: 900px) {
            .container {
                grid-template-columns: 70px 1fr;
            }
            
            .logo span, .nav-links li span, .playlists h3, .playlist-links li, .user-profile span {
                display: none;
            }
            
            .logo, .nav-links li, .playlist-links li {
                justify-content: center;
                padding: 15px 0;
            }
            
            .now-playing {
                width: 40%;
            }
            
            .player-controls {
                width: 60%;
            }
            
            .extra-controls {
                display: none;
            }
        }

        @media (max-width: 600px) {
            .container {
                grid-template-rows: 60px 1fr 120px;
            }
            
            .player {
                flex-direction: column;
                padding: 10px;
            }
            
            .now-playing, .player-controls {
                width: 100%;
            }
            
            .now-playing {
                justify-content: center;
            }
            
            .player-controls {
                padding: 10px 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <div class="search-container">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Search...">
            </div>
            <div class="user-actions">
                <div class="user-profile">
                    <div class="user-avatar"></div>
                    <span>User</span>
                    <i class="fas fa-caret-down"></i>
                </div>
            </div>
        </div>
        
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <i class="fab fa-spotify"></i>
                <span>Spotify</span>
            </div>
            <ul class="nav-links">
                <li class="active">
                    <i class="fas fa-home"></i>
                    <span>Home</span>
                </li>
                <li>
                    <i class="fas fa-search"></i>
                    <span>Search</span>
                </li>
                <li>
                    <i class="fas fa-book"></i>
                    <span>Your Library</span>
                </li>
                <li>
                    <i class="fas fa-plus-square"></i>
                    <span>Create Playlist</span>
                </li>
                <li>
                    <i class="fas fa-heart"></i>
                    <span>Liked Songs</span>
                </li>
            </ul>
            
            <div class="playlists">
                <h3>Playlists</h3>
                <ul class="playlist-links">
                    <li>Discover Weekly</li>
                    <li>Release Radar</li>
                    <li>Daily Mix 1</li>
                    <li>Daily Mix 2</li>
                    <li>Chill Vibes</li>
                    <li>Workout Energy</li>
                    <li>Focus Flow</li>
                    <li>Throwback Hits</li>
                </ul>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="content-header">
                <h1>Recently Played</h1>
            </div>
            <div class="playlist-grid" id="playlistGrid">
                <!-- Playlist cards will be generated by JavaScript -->
            </div>
        </div>
        
        <!-- Player -->
        <div class="player">
            <div class="now-playing">
                <img id="currentAlbumArt" src="https://source.unsplash.com/random/300x300/?music,album" alt="Album Art">
                <div class="track-info">
                    <h4 id="currentTrackTitle">Song Title</h4>
                    <p id="currentTrackArtist">Artist Name</p>
                </div>
                <div class="like-btn">
                    <i class="far fa-heart"></i>
                </div>
            </div>
            
            <div class="player-controls">
                <div class="control-buttons">
                    <button class="control-btn shuffle">
                        <i class="fas fa-random"></i>
                    </button>
                    <button class="control-btn prev">
                        <i class="fas fa-step-backward"></i>
                    </button>
                    <button class="control-btn play-pause" id="playPauseBtn">
                        <i class="fas fa-play"></i>
                    </button>
                    <button class="control-btn next">
                        <i class="fas fa-step-forward"></i>
                    </button>
                    <button class="control-btn repeat">
                        <i class="fas fa-redo"></i>
                    </button>
                </div>
                
                <div class="progress-container">
                    <span class="progress-time" id="currentTime">0:00</span>
                    <div class="progress-bar">
                        <div class="progress" id="progress"></div>
                    </div>
                    <span class="progress-time" id="totalTime">3:30</span>
                </div>
            </div>
            
            <div class="extra-controls">
                <button class="control-btn">
                    <i class="fas fa-list"></i>
                </button>
                <div class="volume-container">
                    <i class="fas fa-volume-up"></i>
                    <div class="volume-bar">
                        <div class="volume-level" id="volumeLevel"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Hidden audio element -->
    <audio id="audioPlayer"></audio>
    
    <script>
        // Sample music data with random album covers
        const playlist = [
            {
                title: "Blinding Lights",
                artist: "The Weeknd",
                cover: "https://source.unsplash.com/random/300x300/?album,cover1",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview115/v4/3e/4f/2c/3e4f2c7a-5c2a-5e5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "3:20"
            },
            {
                title: "Save Your Tears",
                artist: "The Weeknd",
                cover: "https://source.unsplash.com/random/300x300/?album,cover2",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/9c/8c/3d/9c8c3d1c-5f5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "3:35"
            },
            {
                title: "Levitating",
                artist: "Dua Lipa",
                cover: "https://source.unsplash.com/random/300x300/?album,cover3",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "3:23"
            },
            {
                title: "Stay",
                artist: "The Kid LAROI, Justin Bieber",
                cover: "https://source.unsplash.com/random/300x300/?album,cover4",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "2:59"
            },
            {
                title: "Good 4 U",
                artist: "Olivia Rodrigo",
                cover: "https://source.unsplash.com/random/300x300/?album,cover5",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "2:58"
            },
            {
                title: "Montero",
                artist: "Lil Nas X",
                cover: "https://source.unsplash.com/random/300x300/?album,cover6",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "2:17"
            },
            {
                title: "Peaches",
                artist: "Justin Bieber",
                cover: "https://source.unsplash.com/random/300x300/?album,cover7",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "3:18"
            },
            {
                title: "Kiss Me More",
                artist: "Doja Cat ft. SZA",
                cover: "https://source.unsplash.com/random/300x300/?album,cover8",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "3:28"
            },
            {
                title: "Butter",
                artist: "BTS",
                cover: "https://source.unsplash.com/random/300x300/?album,cover9",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "2:42"
            },
            {
                title: "Stay",
                artist: "Post Malone",
                cover: "https://source.unsplash.com/random/300x300/?album,cover10",
                src: "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/0f/8b/6f/0f8b6f0a-0b5d-0b5e-9a5a-5f5d5e3a0c0b/mzaf_16039434969321020085.plus.aac.p.m4a",
                duration: "3:24"
            }
        ];

        // DOM elements
        const audioPlayer = document.getElementById('audioPlayer');
        const currentAlbumArt = document.getElementById('currentAlbumArt');
        const currentTrackTitle = document.getElementById('currentTrackTitle');
        const currentTrackArtist = document.getElementById('currentTrackArtist');
        const currentTimeEl = document.getElementById('currentTime');
        const totalTimeEl = document.getElementById('totalTime');
        const progress = document.getElementById('progress');
        const playPauseBtn = document.getElementById('playPauseBtn');
        const playlistGrid = document.getElementById('playlistGrid');
        const volumeLevel = document.getElementById('volumeLevel');

        // Current track index
        let currentTrackIndex = 0;
        let isPlaying = false;

        // Initialize player
        function initPlayer() {
            // Set first track
            loadTrack(currentTrackIndex);
            
            // Build playlist grid
            buildPlaylistGrid();
            
            // Set initial volume
            audioPlayer.volume = 0.7;
            updateVolumeBar();
            
            // Set up event listeners
            setupEventListeners();
        }

        // Load track
        function loadTrack(index) {
            const track = playlist[index];
            
            // Update UI
            currentAlbumArt.src = track.cover;
            currentTrackTitle.textContent = track.title;
            currentTrackArtist.textContent = track.artist;
            totalTimeEl.textContent = track.duration;
            
            // Set audio source
            audioPlayer.src = track.src;
            
            // Play if player was playing
            if (isPlaying) {
                audioPlayer.play();
            }
        }

        // Build playlist grid
        function buildPlaylistGrid() {
            playlistGrid.innerHTML = '';
            
            playlist.forEach((track, index) => {
                const playlistCard = document.createElement('div');
                playlistCard.className = 'playlist-card';
                
                playlistCard.innerHTML = `
                    <div class="album-art">
                        <img src="${track.cover}" alt="${track.title}">
                        <div class="play-button">
                            <i class="fas fa-play"></i>
                        </div>
                    </div>
                    <div class="playlist-info">
                        <h3>${track.title}</h3>
                        <p>${track.artist}</p>
                    </div>
                `;
                
                playlistCard.addEventListener('click', () => {
                    currentTrackIndex = index;
                    loadTrack(currentTrackIndex);
                    playTrack();
                });
                
                playlistGrid.appendChild(playlistCard);
            });
        }

        // Play track
        function playTrack() {
            audioPlayer.play()
                .then(() => {
                    isPlaying = true;
                    playPauseBtn.innerHTML = '<i class="fas fa-pause"></i>';
                })
                .catch(error => {
                    console.log("Playback failed:", error);
                });
        }

        // Pause track
        function pauseTrack() {
            audioPlayer.pause();
            isPlaying = false;
            playPauseBtn.innerHTML = '<i class="fas fa-play"></i>';
        }

        // Format time (seconds to MM:SS)
        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }

        // Update progress bar
        function updateProgress() {
            const { currentTime, duration } = audioPlayer;
            
            // Update time labels
            currentTimeEl.textContent = formatTime(currentTime);
            
            // Update progress bar width
            const progressPercent = (currentTime / duration) * 100;
            progress.style.width = `${progressPercent}%`;
        }

        // Update volume bar
        function updateVolumeBar() {
            volumeLevel.style.width = `${audioPlayer.volume * 100}%`;
        }

        // Previous track
        function prevTrack() {
            currentTrackIndex--;
            if (currentTrackIndex < 0) {
                currentTrackIndex = playlist.length - 1;
            }
            loadTrack(currentTrackIndex);
            playTrack();
        }

        // Next track
        function nextTrack() {
            currentTrackIndex++;
            if (currentTrackIndex >= playlist.length) {
                currentTrackIndex = 0;
            }
            loadTrack(currentTrackIndex);
            playTrack();
        }

        // Setup event listeners
        function setupEventListeners() {
            // Play/Pause button
            playPauseBtn.addEventListener('click', () => {
                if (isPlaying) {
                    pauseTrack();
                } else {
                    playTrack();
                }
            });
            
            // Previous button
            document.querySelector('.prev').addEventListener('click', prevTrack);
            
            // Next button
            document.querySelector('.next').addEventListener('click', nextTrack);
            
            // Time update
            audioPlayer.addEventListener('timeupdate', updateProgress);
            
            // Progress bar click
            document.querySelector('.progress-bar').addEventListener('click', (e) => {
                const width = e.target.clientWidth;
                const clickX = e.offsetX;
                const duration = audioPlayer.duration;
                
                audioPlayer.currentTime = (clickX / width) * duration;
            });
            
            // Volume bar click
            document.querySelector('.volume-bar').addEventListener('click', (e) => {
                const width = e.target.clientWidth;
                const clickX = e.offsetX;
                const volume = clickX / width;
                
                audioPlayer.volume = volume;
                updateVolumeBar();
            });
            
            // Track ended
            audioPlayer.addEventListener('ended', nextTrack);
            
            // Spacebar to play/pause
            document.addEventListener('keydown', (e) => {
                if (e.code === 'Space') {
                    e.preventDefault();
                    if (isPlaying) {
                        pauseTrack();
                    } else {
                        playTrack();
                    }
                }
            });
        }

        // Initialize player when page loads
        window.addEventListener('DOMContentLoaded', initPlayer);
    </script>
</body>
</html>
